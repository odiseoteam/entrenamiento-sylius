# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en_US

imports:
    - { resource: "@OdiseoSyliusTestimonyPlugin/Resources/config/config.yml" }

services:
    # Default configuration for services in *this* file
    _defaults:
        # Automatically injects dependencies in your services
        autowire: true

        # Automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true

        # Allows optimizing the container by removing unused services; this also means
        # fetching services directly from the container via $container->get() won't work
        public: false

    # Makes classes in src/ available to be used as services;
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # Controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    app.shipping_method.weight:
        class: App\Calculator\WeightCalculator
        tags:
            - { name: 'sylius.shipping_calculator', calculator: 'weight', label: 'Weight Calculator', form_type: App\Form\Type\Calculator\WeightConfigurationType }

    # Payum
    app.payum_gateway_factory.aplyca:
        class: Payum\Core\Bridge\Symfony\Builder\GatewayFactoryBuilder
        arguments: [App\Payum\Aplyca\AplycaGatewayFactory]
        public: true
        tags:
            - { name: payum.gateway_factory_builder, factory: aplyca }

    app.payum_action.aplyca.capture:
        class: App\Payum\Aplyca\Action\CaptureAction
        public: true
        arguments: ['@app.payum.aplyca.api']
        tags:
            - { name: payum.action, factory: aplyca, alias: payum.action.capture }

    app.payum_action.aplyca.convert:
        class: App\Payum\Aplyca\Action\ConvertAction
        public: true
        tags:
            - { name: payum.action, factory: aplyca, alias: payum.action.convert }

    app.payum.aplyca.api:
        class: App\Payum\Aplyca\Api
        public: true
        tags:
            - { name: payum.api, factory: aplyca }

    app.form.type.gateway_configuration.aplyca:
        class: App\Form\Type\AplycaGatewayConfigurationType
        tags:
        - { name: sylius.gateway_configuration_type, type: aplyca, label: "Aplyca" }
        - { name: form.type }

winzou_state_machine:
    sylius_order_checkout:
        callbacks:
            after:
                app_confirm_after_payment_selected:
                    on: ["select_payment", "skip_payment"]
                    do: ["@sm.callback.cascade_transition", "apply"]
                    args: ["object", "event", "'complete'", "'sylius_order_checkout'"]

sylius_grid:
    grids:
        sylius_admin_product:
            fields:
                isOnSale:
                    position: 1
                    type: twig
                    options:
                        template: "@SyliusUi/Grid/Field/enabled.html.twig"
                name:
                    position: 2

payum:
    gateways:
        aplyca:
            factory: aplyca
